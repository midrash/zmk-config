/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/ext_power.h>
// #include "mouse.dtsi"
#define AS(keycode) &as LS(keycode) keycode  


#define BASE 0
#define NAV 1
#define MUS 2
#define NUM 3
#define FUN 4
#define MBASE 5
#define MNAV 6
#define MMUS 7
#define MNUM 8
#define MFUN 9

#define XXX &none
#define TRN &trans

/ {
behaviors {
        /*
        bhm: balanced_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;                // repeat on tap-into-hold
                require-prior-idle-ms = <150>;
                bindings = <&kp>, <&kp>;
                hold-trigger-on-release;             // delay positional check until key-release
        };
        */
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <185>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
};
        keymap {
                compatible = "zmk,keymap";

                Base_layer {
// -----------------------------------------------------------------------------------------
// |     |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |     |
// |     |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |     |
// |     |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |     |
//       | ESC | SPC(NAV)  | TAB(MUS)  |   |  RET(SYM)  | BCK(NUM)  | DEL(FUN) |
                        bindings = <
//╭─────┬────────┬───────┬─────────┬───────────────┬─────────────╮ ╭─────────────┬──────────────┬───────────┬────────────┬───────────┬─────╮
    XXX   AS(Q)    AS(W)   AS(E)     AS(R)           AS(T)           AS(Y)         AS(U)          AS(I)       AS(O)        AS(P)       XXX   
//├─────┼────────┼───────┼─────────┼───────────────┼─────────────┤ ├─────────────┼──────────────┼───────────┼────────────┼───────────┼─────┤
    XXX   AS(A)    AS(S)   AS(D)     AS(F)           AS(G)           AS(H)         AS(J)          AS(K)       AS(L)        AS(SEMI)    XXX
//├─────┼────────┼───────┼─────────┼───────────────┼─────────────┤ ├─────────────┼──────────────┼───────────┼────────────┼───────────┼─────┤
    XXX   AS(Z)    AS(X)   AS(C)     AS(V)           AS(B)           AS(N)         AS(M)          AS(COMMA)   AS(PERIOD)   AS(SLASH)   XXX     
//╰─────┴────────┴───────┼─────────┼───────────────┼─────────────┤ ├─────────────┼──────────────┼───────────┼────────────┴───────────┴─────╯ 
                           &kp ESC   &lt NAV SPACE   &lt MUS TAB     &lt FUN RET   &lt NUM BSPC   &kp DEL                                               
//                       ╰─────────┴───────────────┴─────────────╯ ╰─────────────┴──────────────┴───────────╯   
                        >;
                };
        };
};
